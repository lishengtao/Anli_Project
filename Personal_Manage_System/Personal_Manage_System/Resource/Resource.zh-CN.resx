<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="about" xml:space="preserve">
    <value>关于</value>
  </data>
  <data name="all_rights_reserved" xml:space="preserve">
    <value>版权所有</value>
  </data>
  <data name="analysis" xml:space="preserve">
    <value>统计分析</value>
  </data>
  <data name="brand_manage" xml:space="preserve">
    <value>品牌管理</value>
  </data>
  <data name="client_manage" xml:space="preserve">
    <value>客户管理</value>
  </data>
  <data name="continue" xml:space="preserve">
    <value>继续</value>
  </data>
  <data name="corp" xml:space="preserve">
    <value>亚太安讯网络技术有限公司（2010）</value>
  </data>
  <data name="dbName" xml:space="preserve">
    <value>数据库名字</value>
  </data>
  <data name="delete" xml:space="preserve">
    <value>删除</value>
  </data>
  <data name="end" xml:space="preserve">
    <value>结束</value>
  </data>
  <data name="haveInLibrary" xml:space="preserve">
    <value>EPC为:{0}的物品已经入库！</value>
  </data>
  <data name="haveOutLibrary" xml:space="preserve">
    <value>EPC为:{0}的物品已经出库！</value>
  </data>
  <data name="inLibrary" xml:space="preserve">
    <value>EPC为:{0}的物品已经入库！</value>
  </data>
  <data name="input_product" xml:space="preserve">
    <value>进货</value>
  </data>
  <data name="inventory" xml:space="preserve">
    <value>盘点</value>
  </data>
  <data name="inventoryOk" xml:space="preserve">
    <value>盘点完成！</value>
  </data>
  <data name="inventory_manage" xml:space="preserve">
    <value>库存管理</value>
  </data>
  <data name="ipAddress" xml:space="preserve">
    <value>IP地址</value>
  </data>
  <data name="login" xml:space="preserve">
    <value>登录</value>
  </data>
  <data name="loginClue" xml:space="preserve">
    <value>登录提示</value>
  </data>
  <data name="loginError" xml:space="preserve">
    <value>登录用户名和密码不对，请重新输入！</value>
  </data>
  <data name="noHaveProduct" xml:space="preserve">
    <value>没有商品，请先扫描商品！</value>
  </data>
  <data name="noInLibrary" xml:space="preserve">
    <value>EPC为:{0}的物品没有入库！</value>
  </data>
  <data name="noInventoryTask" xml:space="preserve">
    <value>没有盘点任务，请先到服务端开启盘点任务！</value>
  </data>
  <data name="noOutLibrary" xml:space="preserve">
    <value>EPC为:{0}的物品没有出库！</value>
  </data>
  <data name="noProduct" xml:space="preserve">
    <value>没有此代码的商品！</value>
  </data>
  <data name="num" xml:space="preserve">
    <value>数量</value>
  </data>
  <data name="outLibrary" xml:space="preserve">
    <value>出货</value>
  </data>
  <data name="outOk" xml:space="preserve">
    <value>出库完成！</value>
  </data>
  <data name="outOrNoIn" xml:space="preserve">
    <value>EPC为:{0}的物品已经出库或还没有入库！</value>
  </data>
  <data name="output_product" xml:space="preserve">
    <value>出货</value>
  </data>
  <data name="password" xml:space="preserve">
    <value>密   码</value>
  </data>
  <data name="productCode" xml:space="preserve">
    <value>产品名称</value>
  </data>
  <data name="product_manage" xml:space="preserve">
    <value>产品管理</value>
  </data>
  <data name="sale" xml:space="preserve">
    <value>销售</value>
  </data>
  <data name="save" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="saveOk" xml:space="preserve">
    <value>保存成功！</value>
  </data>
  <data name="stop" xml:space="preserve">
    <value>停止</value>
  </data>
  <data name="sync" xml:space="preserve">
    <value>上传数据</value>
  </data>
  <data name="sys_manage" xml:space="preserve">
    <value>系统管理</value>
  </data>
  <data name="sys_name" xml:space="preserve">
    <value>安利营销人员管理系统</value>
  </data>
  <data name="type_manage" xml:space="preserve">
    <value>类别管理</value>
  </data>
  <data name="userName" xml:space="preserve">
    <value>用户名</value>
  </data>
  <data name="userNameNull" xml:space="preserve">
    <value>登录用户名不能为空，请输入！</value>
  </data>
  <data name="view" xml:space="preserve">
    <value>查看</value>
  </data>
  <data name="welcome" xml:space="preserve">
    <value>欢迎使用</value>
  </data>
</root>